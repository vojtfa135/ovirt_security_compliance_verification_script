Testcase                                                                                                                 Result
--------                                                                                                                 ------
[9] pamfaillock_unlock                                                                                                    PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ source tp_ssh_functions.bash
++ source functions.bash
+++ [[ -z 1 ]]
+++ return 0
++ BFOLDER=/tmp
++ RND=32640
++ TIMEOUT=600
++ id -u testuser
+ tuid=1004
+ grep -q pam_faillock /etc/pam.d/sshd
+ grep -q pam_faillock /etc/pam.d/password-auth
+ disable_ssh_strong_rng
+ MPROFILE=/etc/profile
+ SSHDCONF=/etc/sysconfig/sshd
+ CCCONF=/etc/profile.d/cc-configuration.sh
+ '[' -e /etc/profile ']'
+ backup /etc/profile
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/profile.XXXXXX
+ b=/etc/profile.20yvSJ
+ cp -a /etc/profile /etc/profile.20yvSJ
+ prepend_cleanup 'mv -f '\''/etc/profile.20yvSJ'\'' '\''/etc/profile'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/profile.20yvSJ'\'' '\''/etc/profile'\''
	    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/sysconfig/sshd ']'
+ backup /etc/sysconfig/sshd
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/sysconfig/sshd.XXXXXX
+ b=/etc/sysconfig/sshd.OWAkok
+ cp -a /etc/sysconfig/sshd /etc/sysconfig/sshd.OWAkok
+ prepend_cleanup 'mv -f '\''/etc/sysconfig/sshd.OWAkok'\'' '\''/etc/sysconfig/sshd'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/sysconfig/sshd.OWAkok'\'' '\''/etc/sysconfig/sshd'\''
	    mv -f '\''/etc/profile.20yvSJ'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/profile.d/cc-configuration.sh ']'
+ ssh_remove_screen /etc/profile
+ '[' x/etc/profile = x ']'
+ '[' -f /etc/profile ']'
+ sed -i 's/.*sleep [0-9]\+.*//g; s/.*exec.*SCREENEXEC.*//g' /etc/profile
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ ssh_remove_strong_rng_env
+ export -n SSH_USE_STRONG_RNG
+ prepend_cleanup 'export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG
	    mv -f '\''/etc/sysconfig/sshd.OWAkok'\'' '\''/etc/sysconfig/sshd'\'';
    mv -f '\''/etc/profile.20yvSJ'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ ssh_remove_strong_rng /etc/sysconfig/sshd
+ '[' x/etc/sysconfig/sshd = x ']'
+ '[' -f /etc/sysconfig/sshd ']'
+ sed -i 's/.*SSH_USE_STRONG_RNG.*//g' /etc/sysconfig/sshd
+ ssh_remove_strong_rng /etc/profile.d/cc-configuration.sh
+ '[' x/etc/profile.d/cc-configuration.sh = x ']'
+ '[' -f /etc/profile.d/cc-configuration.sh ']'
+ return
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ expect -c '
    spawn ssh $env(TEST_USER)@localhost
    expect {
        {continue} { send "yes\r"; exp_continue }
	{assword} { send "badpassword\r" }
    }
    expect {
        {denied} { exp_continue }
        {assword} { send "badpassword\r" }
    }
    expect {
        {denied} { exp_continue }
        {assword} { send "badpassword\r" }
    }
    expect -nocase {denied} { close; wait }'
spawn ssh testuser@localhost
testuser@localhost's password: 
Permission denied, please try again.
testuser@localhost's password: 
Permission denied, please try again.
testuser@localhost's password: 
Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).
+ /sbin/faillock --user testuser --reset
+ augrok type=USER_MGMT 'msg_1=~.*faillock-reset.*id=1004.*exe=.*/sbin/faillock.*res=success.*'
+ augrok -q type=USER_MGMT 'msg_1=~.*faillock-reset.*id=1004.*exe=.*/sbin/faillock.*res=success.*'
+ expect -c '
    spawn ssh $env(TEST_USER)@localhost
    expect {
        {continue} { send "yes\r"; exp_continue }
        {assword} {
            send "$env(TEST_USER_PASSWD)\r"
            send "PS1=:\\::\r"
        }
    }
    expect {:::$} { close; wait }'
spawn ssh testuser@localhost
testuser@localhost's password: 
Last failed login: Thu Jun 24 13:15:55 CEST 2021 from localhost on ssh:notty
There were 8 failed login attempts since the last successful login.
Last login: Thu Jun 24 13:14:59 2021
nodectl must be run as root!
nodectl must be run as root!
]0;testuser@rhv:~[?1034h[testuser@rhv ~]$ + augrok -q type=CRED_ACQ
+ msg_2='acct="testuser" exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ augrok -q type=CRED_ACQ 'msg_1=~PAM:setcred.* acct="testuser" exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ augrok -q type=USER_ACCT 'msg_1=~PAM:accounting.* acct="testuser" exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ exit_pass
+ [[ -n '' ]]
+ exit 0
+ test_cleanup
+ export SSH_USE_STRONG_RNG=12
+ SSH_USE_STRONG_RNG=12
+ readonly SSH_USE_STRONG_RNG
+ mv -f /etc/sysconfig/sshd.OWAkok /etc/sysconfig/sshd
+ mv -f /etc/profile.20yvSJ /etc/profile
+ rm -f /tmp/tmp.SVKSdYnbnl /tmp/tmp.iAaiVdiHCv /usr/local/eal4_testing/audit-test/tmp.NpamOR70J6
+ exit
--- end output -------------------------------------------------------------

