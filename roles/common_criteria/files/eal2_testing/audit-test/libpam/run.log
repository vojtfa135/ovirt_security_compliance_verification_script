
Started:                         Thu Jun 24 13:14:52 CEST 2021
Kernel:                          3.10.0-1127.8.2.el7.x86_64
Architecture:                    x86_64
Mode:                            64
Hostname:                        rhv.atsec.com
Profile:                         capp
selinux-policy version:          selinux-policy-3.13.1-266.el7.noarch

SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   enforcing
Mode from config file:          enforcing
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Max kernel policy version:      31

Log file started Thu Jun 24 13:14:52 CEST 2021
Adding group testuser
Adding user testuser
Adding group testadmin
Adding user testadmin
Testcase                                                                                                                 Result
--------                                                                                                                 ------
[0] sshd                                                                                                                  PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ source tp_ssh_functions.bash
++ source functions.bash
+++ [[ -z 1 ]]
+++ return 0
++ BFOLDER=/tmp
++ RND=11685
++ TIMEOUT=600
+ disable_ssh_strong_rng
+ MPROFILE=/etc/profile
+ SSHDCONF=/etc/sysconfig/sshd
+ CCCONF=/etc/profile.d/cc-configuration.sh
+ '[' -e /etc/profile ']'
+ backup /etc/profile
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/profile.XXXXXX
+ b=/etc/profile.K3HbTf
+ cp -a /etc/profile /etc/profile.K3HbTf
+ prepend_cleanup 'mv -f '\''/etc/profile.K3HbTf'\'' '\''/etc/profile'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/profile.K3HbTf'\'' '\''/etc/profile'\''
	    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/sysconfig/sshd ']'
+ backup /etc/sysconfig/sshd
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/sysconfig/sshd.XXXXXX
+ b=/etc/sysconfig/sshd.Icc2RG
+ cp -a /etc/sysconfig/sshd /etc/sysconfig/sshd.Icc2RG
+ prepend_cleanup 'mv -f '\''/etc/sysconfig/sshd.Icc2RG'\'' '\''/etc/sysconfig/sshd'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/sysconfig/sshd.Icc2RG'\'' '\''/etc/sysconfig/sshd'\''
	    mv -f '\''/etc/profile.K3HbTf'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/profile.d/cc-configuration.sh ']'
+ ssh_remove_screen /etc/profile
+ '[' x/etc/profile = x ']'
+ '[' -f /etc/profile ']'
+ sed -i 's/.*sleep [0-9]\+.*//g; s/.*exec.*SCREENEXEC.*//g' /etc/profile
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ ssh_remove_strong_rng_env
+ export -n SSH_USE_STRONG_RNG
+ prepend_cleanup 'export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG
	    mv -f '\''/etc/sysconfig/sshd.Icc2RG'\'' '\''/etc/sysconfig/sshd'\'';
    mv -f '\''/etc/profile.K3HbTf'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ ssh_remove_strong_rng /etc/sysconfig/sshd
+ '[' x/etc/sysconfig/sshd = x ']'
+ '[' -f /etc/sysconfig/sshd ']'
+ sed -i 's/.*SSH_USE_STRONG_RNG.*//g' /etc/sysconfig/sshd
+ ssh_remove_strong_rng /etc/profile.d/cc-configuration.sh
+ '[' x/etc/profile.d/cc-configuration.sh = x ']'
+ '[' -f /etc/profile.d/cc-configuration.sh ']'
+ return
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ expect -c '
    spawn ssh testuser@localhost
    expect {
        {continue} {send yes\r; exp_continue}
        {assword} {send 2manySecre+S-23615\r}
    }
    expect {testuser} {send exit\r}
    expect eof
    exit 0'
spawn ssh testuser@localhost
testuser@localhost's password: 
Last failed login: Thu Jun 24 13:12:58 CEST 2021 from localhost on ssh:notty
There were 344 failed login attempts since the last successful login.
nodectl must be run as root!
nodectl must be run as root!
]0;testuser@rhv:~[?1034h[testuser@rhv ~]$ exit
logout
Connection to localhost closed.
+ msg_1='acct="*testuser"*[ :]* exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ augrok -q type=CRED_REFR 'msg_1=~PAM:*setcred.* acct="*testuser"*[ :]* exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ augrok -q type=CRED_ACQ 'msg_1=~PAM:*setcred.* acct="*testuser"*[ :]* exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ augrok -q type=USER_ACCT 'msg_1=~PAM:*accounting.* acct="*testuser"*[ :]* exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ exit_pass
+ [[ -n '' ]]
+ exit 0
+ test_cleanup
+ export SSH_USE_STRONG_RNG=12
+ SSH_USE_STRONG_RNG=12
+ readonly SSH_USE_STRONG_RNG
+ mv -f /etc/sysconfig/sshd.Icc2RG /etc/sysconfig/sshd
+ mv -f /etc/profile.K3HbTf /etc/profile
+ rm -f /tmp/tmp.voPY3lz8Rs /tmp/tmp.Hpan5R7kYl /usr/local/eal4_testing/audit-test/tmp.whJH9ehKFw
+ exit
--- end output -------------------------------------------------------------


Testcase                                                                                                                 Result
--------                                                                                                                 ------
[1] sshd_fail                                                                                                             PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ source tp_ssh_functions.bash
++ source functions.bash
+++ [[ -z 1 ]]
+++ return 0
++ BFOLDER=/tmp
++ RND=3685
++ TIMEOUT=600
+ disable_ssh_strong_rng
+ MPROFILE=/etc/profile
+ SSHDCONF=/etc/sysconfig/sshd
+ CCCONF=/etc/profile.d/cc-configuration.sh
+ '[' -e /etc/profile ']'
+ backup /etc/profile
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/profile.XXXXXX
+ b=/etc/profile.FTnUoF
+ cp -a /etc/profile /etc/profile.FTnUoF
+ prepend_cleanup 'mv -f '\''/etc/profile.FTnUoF'\'' '\''/etc/profile'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/profile.FTnUoF'\'' '\''/etc/profile'\''
	    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/sysconfig/sshd ']'
+ backup /etc/sysconfig/sshd
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/sysconfig/sshd.XXXXXX
+ b=/etc/sysconfig/sshd.bGwjqs
+ cp -a /etc/sysconfig/sshd /etc/sysconfig/sshd.bGwjqs
+ prepend_cleanup 'mv -f '\''/etc/sysconfig/sshd.bGwjqs'\'' '\''/etc/sysconfig/sshd'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/sysconfig/sshd.bGwjqs'\'' '\''/etc/sysconfig/sshd'\''
	    mv -f '\''/etc/profile.FTnUoF'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/profile.d/cc-configuration.sh ']'
+ ssh_remove_screen /etc/profile
+ '[' x/etc/profile = x ']'
+ '[' -f /etc/profile ']'
+ sed -i 's/.*sleep [0-9]\+.*//g; s/.*exec.*SCREENEXEC.*//g' /etc/profile
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ ssh_remove_strong_rng_env
+ export -n SSH_USE_STRONG_RNG
+ prepend_cleanup 'export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG
	    mv -f '\''/etc/sysconfig/sshd.bGwjqs'\'' '\''/etc/sysconfig/sshd'\'';
    mv -f '\''/etc/profile.FTnUoF'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ ssh_remove_strong_rng /etc/sysconfig/sshd
+ '[' x/etc/sysconfig/sshd = x ']'
+ '[' -f /etc/sysconfig/sshd ']'
+ sed -i 's/.*SSH_USE_STRONG_RNG.*//g' /etc/sysconfig/sshd
+ ssh_remove_strong_rng /etc/profile.d/cc-configuration.sh
+ '[' x/etc/profile.d/cc-configuration.sh = x ']'
+ '[' -f /etc/profile.d/cc-configuration.sh ']'
+ return
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ expect -c '
    spawn ssh testuser@localhost
    expect {
       {continue} {send yes\r; exp_continue}
       {assword} {send badpassword\r}
    }
    expect {
        {permission denied} {close; wait}
        {assword} {close; wait}
    }'
spawn ssh testuser@localhost
testuser@localhost's password: 
Permission denied, please try again.
testuser@localhost's password: + msg_1='acct="*testuser"*[ :]* exe=.*/usr/sbin/sshd.*terminal=ssh res=failed.*'
+ augrok -q type=USER_AUTH 'msg_1=~PAM:*authentication.* acct="*testuser"*[ :]* exe=.*/usr/sbin/sshd.*terminal=ssh res=failed.*'
+ exit_pass
+ [[ -n '' ]]
+ exit 0
+ test_cleanup
+ export SSH_USE_STRONG_RNG=12
+ SSH_USE_STRONG_RNG=12
+ readonly SSH_USE_STRONG_RNG
+ mv -f /etc/sysconfig/sshd.bGwjqs /etc/sysconfig/sshd
+ mv -f /etc/profile.FTnUoF /etc/profile
+ rm -f /tmp/tmp.TrlHoAcGPX /tmp/tmp.0buhtvXJwJ /usr/local/eal4_testing/audit-test/tmp.JtBPRwBMt5
+ exit
--- end output -------------------------------------------------------------


Testcase                                                                                                                 Result
--------                                                                                                                 ------
[2] su                                                                                                                    PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ chmod 666 /tmp/tmp.Cd690BDJjH
+ backup /etc/profile
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/profile.XXXXXX
+ b=/etc/profile.TR0JKM
+ cp -a /etc/profile /etc/profile.TR0JKM
+ prepend_cleanup 'mv -f '\''/etc/profile.TR0JKM'\'' '\''/etc/profile'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/profile.TR0JKM'\'' '\''/etc/profile'\''
	    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ sed -i 's/\[ -w $(tty) \]/false/' /etc/profile
+ export tmp1
++ id -u testuser
+ export TEST_EUID=1004 zero=./test_su.bash
+ TEST_EUID=1004
+ zero=./test_su.bash
++ grep wheel /etc/group
++ cut -d: -f3
+ export WHEEL_GID=10
+ WHEEL_GID=10
+ perl -MPOSIX -e 'setgid $ENV{WHEEL_GID}; setuid $ENV{TEST_EUID}; system $ENV{zero}'
spawn /bin/su - testuser
Password: 
Last login: Thu Jun 24 13:14:55 CEST 2021 from localhost on pts/4
Last failed login: Thu Jun 24 13:14:59 CEST 2021 from localhost on ssh:notty
There was 1 failed login attempt since the last successful login.
nodectl must be run as root!
nodectl must be run as root!
]0;testuser@rhv:~[?1034h[testuser@rhv ~]$ PS1=:\::
]0;testuser@rhv:~:::tty > /tmp/tmp.Cd690BDJjH
]0;testuser@rhv:~:::+ pts=/dev/pts/3
+ pts=3
+ msg_1='acct="*testuser"*[ :]* exe=.*/bin/su.*terminal=pts/3 res=success.*'
+ augrok -q type=USER_AUTH 'msg_1=~PAM:*authentication.* acct="*testuser"*[ :]* exe=.*/bin/su.*terminal=pts/3 res=success.*'
+ augrok -q type=USER_ACCT 'msg_1=~PAM:*accounting.* acct="*testuser"*[ :]* exe=.*/bin/su.*terminal=pts/3 res=success.*'
+ exit_pass
+ [[ -n '' ]]
+ exit 0
+ test_cleanup
+ mv -f /etc/profile.TR0JKM /etc/profile
+ rm -f /tmp/tmp.Cd690BDJjH /tmp/tmp.H1NU0p5xC8 /usr/local/eal4_testing/audit-test/tmp.7Bv9RVbBNj
+ exit
--- end output -------------------------------------------------------------


Testcase                                                                                                                 Result
--------                                                                                                                 ------
[3] su_fail                                                                                                               PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ TEST_USER=testuser
+ TEST_USER_PASSWD=badpassword
++ id -u testuser
+ TEST_EUID=1004
+ tmp1=/tmp/tmp.t5CxKakLwd
+ zero=./test_su_fail.bash
++ grep wheel /etc/group
++ cut -d: -f3
+ WHEEL_GID=10
+ perl -MPOSIX -e 'setgid $ENV{WHEEL_GID}; setuid $ENV{TEST_EUID}; system $ENV{zero}'
spawn /bin/su - testuser
Password: 
su: Authentication failure
+ msg_1='acct="*testuser"*[ :]* exe=.*/bin/su.*res=failed.*'
+ augrok -q type=USER_AUTH 'msg_1=~PAM:*authentication.* acct="*testuser"*[ :]* exe=.*/bin/su.*res=failed.*'
+ exit_pass
+ [[ -n '' ]]
+ exit 0
+ test_cleanup
+ rm -f /tmp/tmp.t5CxKakLwd /tmp/tmp.nSrnElsskd /usr/local/eal4_testing/audit-test/tmp.HvBMS19rPK
+ exit
--- end output -------------------------------------------------------------


Testcase                                                                                                                 Result
--------                                                                                                                 ------
[4] sudo                                                                                                                  PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ main
+ setup_cleanup
+ prepend_cleanup 'rm -f /etc/sudoers.new'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	rm -f /etc/sudoers.new
	    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ prepend_cleanup 'groupdel sudogroup'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	groupdel sudogroup
	    rm -f /etc/sudoers.new;
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ prepend_cleanup 'killall -9 -u sudotarget; userdel -rf sudotarget'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	killall -9 -u sudotarget; userdel -rf sudotarget
	    groupdel sudogroup;
    rm -f /etc/sudoers.new;
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ prepend_cleanup 'killall -9 -u sudouser2; userdel -rf sudouser2'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	killall -9 -u sudouser2; userdel -rf sudouser2
	    killall -9 -u sudotarget;
    userdel -rf sudotarget;
    groupdel sudogroup;
    rm -f /etc/sudoers.new;
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ prepend_cleanup 'killall -9 -u sudouser1; userdel -rf sudouser1'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	killall -9 -u sudouser1; userdel -rf sudouser1
	    killall -9 -u sudouser2;
    userdel -rf sudouser2;
    killall -9 -u sudotarget;
    userdel -rf sudotarget;
    groupdel sudogroup;
    rm -f /etc/sudoers.new;
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ gen_user
+ killall -9 -u sudouser1
Cannot find user sudouser1
+ killall -9 -u sudouser2
Cannot find user sudouser2
+ killall -9 -u sudotarget
Cannot find user sudotarget
+ userdel -rf sudouser1
+ userdel -rf sudouser2
+ userdel -rf sudotarget
+ groupdel sudogroup
+ groupadd sudogroup
+ useradd -u 12345 -g sudogroup -p '$6$Rpvtlluu$K63QZN9do4I03/uaKYVFxe3d7CZHOCUsAQNs7F5CQ.b.HJgcGaLOx6qRepDNko4xFxO0VFk4OEQzXHGBAtfHe0' sudouser1
+ useradd -u 12346 -p '$6$Rpvtlluu$K63QZN9do4I03/uaKYVFxe3d7CZHOCUsAQNs7F5CQ.b.HJgcGaLOx6qRepDNko4xFxO0VFk4OEQzXHGBAtfHe0' sudouser2
+ useradd -u 12347 -g sudogroup -p '$6$Rpvtlluu$K63QZN9do4I03/uaKYVFxe3d7CZHOCUsAQNs7F5CQ.b.HJgcGaLOx6qRepDNko4xFxO0VFk4OEQzXHGBAtfHe0' sudotarget
+ backup /etc/sudoers
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/sudoers.XXXXXX
+ b=/etc/sudoers.wJ3Cup
+ cp -a /etc/sudoers /etc/sudoers.wJ3Cup
+ prepend_cleanup 'mv -f '\''/etc/sudoers.wJ3Cup'\'' '\''/etc/sudoers'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/sudoers.wJ3Cup'\'' '\''/etc/sudoers'\''
	    killall -9 -u sudouser1;
    userdel -rf sudouser1;
    killall -9 -u sudouser2;
    userdel -rf sudouser2;
    killall -9 -u sudotarget;
    userdel -rf sudotarget;
    groupdel sudogroup;
    rm -f /etc/sudoers.new;
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ testloop
+ local res=
+ local ret=
+ local testfail=0
+ local testpass=0
+ local testno=0
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_u1'
++ USER_SUDO=sudouser1
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_u1'
++ USER_EXEC=sudouser1
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_u1'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_u1'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_u1'
++ CMD_SUDO=/usr/bin/id
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_u1'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_u1'
++ CMD_RES=12347
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_u1'
++ CMD_RET=0
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_u1'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers sudouser1 sudotarget /usr/bin/id
+ local User_Alias=sudouser1
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/id
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser1 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser1'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudotarget /usr/bin/id -u 2>/dev/null' sudouser1
+ res=12347
+ ret=0
+ let testno=0+1
+ '[' 12347 = 12347 -a 0 -eq 0 ']'
+ echo 'Test u1 PASSED'
Test u1 PASSED
+ let testpass=0+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_u2'
++ USER_SUDO=sudouser1
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_u2'
++ USER_EXEC=sudouser2
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_u2'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_u2'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_u2'
++ CMD_SUDO=/usr/bin/id
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_u2'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_u2'
++ CMD_RES=
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_u2'
++ CMD_RET=1
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_u2'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers sudouser1 sudotarget /usr/bin/id
+ local User_Alias=sudouser1
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/id
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser1 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser1'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudotarget /usr/bin/id -u 2>/dev/null' sudouser2
+ res=
+ ret=1
+ let testno=1+1
+ '[' '' = '' -a 1 -eq 1 ']'
+ echo 'Test u2 PASSED'
Test u2 PASSED
+ let testpass=1+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_u3'
++ USER_SUDO=%sudogroup
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_u3'
++ USER_EXEC=sudouser1
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_u3'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_u3'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_u3'
++ CMD_SUDO=/usr/bin/id
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_u3'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_u3'
++ CMD_RES=12347
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_u3'
++ CMD_RET=0
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_u3'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers %sudogroup sudotarget /usr/bin/id
+ local User_Alias=%sudogroup
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/id
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n %sudogroup ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = %sudogroup'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudotarget /usr/bin/id -u 2>/dev/null' sudouser1
+ res=12347
+ ret=0
+ let testno=2+1
+ '[' 12347 = 12347 -a 0 -eq 0 ']'
+ echo 'Test u3 PASSED'
Test u3 PASSED
+ let testpass=2+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_u4'
++ USER_SUDO=%sudogroup
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_u4'
++ USER_EXEC=sudouser2
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_u4'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_u4'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_u4'
++ CMD_SUDO=/usr/bin/id
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_u4'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_u4'
++ CMD_RES=
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_u4'
++ CMD_RET=1
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_u4'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers %sudogroup sudotarget /usr/bin/id
+ local User_Alias=%sudogroup
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/id
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n %sudogroup ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = %sudogroup'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudotarget /usr/bin/id -u 2>/dev/null' sudouser2
+ res=
+ ret=1
+ let testno=3+1
+ '[' '' = '' -a 1 -eq 1 ']'
+ echo 'Test u4 PASSED'
Test u4 PASSED
+ let testpass=3+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_t2'
++ USER_SUDO=sudouser2
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_t2'
++ USER_EXEC=sudouser2
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_t2'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_t2'
++ RUN_EXEC=sudouser2
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_t2'
++ CMD_SUDO=/usr/bin/id
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_t2'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_t2'
++ CMD_RES=
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_t2'
++ CMD_RET=1
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_t2'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers sudouser2 sudotarget /usr/bin/id
+ local User_Alias=sudouser2
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/id
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser2 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser2'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudouser2 /usr/bin/id -u 2>/dev/null' sudouser2
+ res=
+ ret=1
+ let testno=4+1
+ '[' '' = '' -a 1 -eq 1 ']'
+ echo 'Test t2 PASSED'
Test t2 PASSED
+ let testpass=4+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_t3'
++ USER_SUDO=sudouser2
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_t3'
++ USER_EXEC=sudouser2
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_t3'
++ RUN_SUDO=%sudogroup
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_t3'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_t3'
++ CMD_SUDO=/usr/bin/id
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_t3'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_t3'
++ CMD_RES=12347
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_t3'
++ CMD_RET=0
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_t3'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers sudouser2 %sudogroup /usr/bin/id
+ local User_Alias=sudouser2
+ local Runas_Alias=%sudogroup
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/id
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser2 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser2'
+ echo 'Runas_Alias RUNAS = %sudogroup'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudotarget /usr/bin/id -u 2>/dev/null' sudouser2
+ res=12347
+ ret=0
+ let testno=5+1
+ '[' 12347 = 12347 -a 0 -eq 0 ']'
+ echo 'Test t3 PASSED'
Test t3 PASSED
+ let testpass=5+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_t4'
++ USER_SUDO=sudouser2
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_t4'
++ USER_EXEC=sudouser2
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_t4'
++ RUN_SUDO=%sudogroup
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_t4'
++ RUN_EXEC=sudouser2
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_t4'
++ CMD_SUDO=/usr/bin/id
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_t4'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_t4'
++ CMD_RES=
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_t4'
++ CMD_RET=1
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_t4'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers sudouser2 %sudogroup /usr/bin/id
+ local User_Alias=sudouser2
+ local Runas_Alias=%sudogroup
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/id
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser2 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser2'
+ echo 'Runas_Alias RUNAS = %sudogroup'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudouser2 /usr/bin/id -u 2>/dev/null' sudouser2
+ res=
+ ret=1
+ let testno=6+1
+ '[' '' = '' -a 1 -eq 1 ']'
+ echo 'Test t4 PASSED'
Test t4 PASSED
+ let testpass=6+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_c2'
++ USER_SUDO=sudouser1
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_c2'
++ USER_EXEC=sudouser1
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_c2'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_c2'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_c2'
++ CMD_SUDO=/usr/bin/id
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_c2'
++ CMD_EXEC=/bin/ls
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_c2'
++ CMD_RES=
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_c2'
++ CMD_RET=1
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_c2'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers sudouser1 sudotarget /usr/bin/id
+ local User_Alias=sudouser1
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/id
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser1 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser1'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudotarget /bin/ls 2>/dev/null' sudouser1
+ res=
+ ret=1
+ let testno=7+1
+ '[' '' = '' -a 1 -eq 1 ']'
+ echo 'Test c2 PASSED'
Test c2 PASSED
+ let testpass=7+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_c3'
++ USER_SUDO=sudouser1
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_c3'
++ USER_EXEC=sudouser1
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_c3'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_c3'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_c3'
++ CMD_SUDO=/usr/bin/
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_c3'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_c3'
++ CMD_RES=12347
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_c3'
++ CMD_RET=0
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_c3'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers sudouser1 sudotarget /usr/bin/
+ local User_Alias=sudouser1
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser1 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser1'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudotarget /usr/bin/id -u 2>/dev/null' sudouser1
+ res=12347
+ ret=0
+ let testno=8+1
+ '[' 12347 = 12347 -a 0 -eq 0 ']'
+ echo 'Test c3 PASSED'
Test c3 PASSED
+ let testpass=8+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_p2'
++ USER_SUDO=sudouser1
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_p2'
++ USER_EXEC=sudouser1
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_p2'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_p2'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_p2'
++ CMD_SUDO=/usr/bin/id
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_p2'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_p2'
++ CMD_RES=
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_p2'
++ CMD_RET=1
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_p2'
++ USER_PASS=wrongpass
+ '[' -z wrongpass ']'
+ setup_sudoers sudouser1 sudotarget /usr/bin/id
+ local User_Alias=sudouser1
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local Cmd_Alias=/usr/bin/id
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser1 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser1'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo wrongpass | sudo -S -u sudotarget /usr/bin/id -u 2>/dev/null' sudouser1
+ res=
+ ret=1
+ let testno=9+1
+ '[' '' = '' -a 1 -eq 1 ']'
+ echo 'Test p2 PASSED'
Test p2 PASSED
+ let testpass=9+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_p3'
++ USER_SUDO=sudouser1
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_p3'
++ USER_EXEC=sudouser1
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_p3'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_p3'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_p3'
++ CMD_SUDO='NOPASSWD: /usr/bin/id'
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_p3'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_p3'
++ CMD_RES=12347
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_p3'
++ CMD_RET=0
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_p3'
++ USER_PASS=
+ '[' -z '' ']'
+ USER_PASS=Tad6osBijy
+ setup_sudoers sudouser1 sudotarget NOPASSWD: /usr/bin/id
+ local User_Alias=sudouser1
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local 'Cmd_Alias=NOPASSWD: /usr/bin/id'
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser1 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser1'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) NOPASSWD: /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo Tad6osBijy | sudo -S -u sudotarget /usr/bin/id -u 2>/dev/null' sudouser1
+ res=12347
+ ret=0
+ let testno=10+1
+ '[' 12347 = 12347 -a 0 -eq 0 ']'
+ echo 'Test p3 PASSED'
Test p3 PASSED
+ let testpass=10+1
+ for i in '$TESTS'
+ local USER_SUDO=
+ eval 'USER_SUDO=$USER_SUDO_p4'
++ USER_SUDO=sudouser1
+ local USER_EXEC=
+ eval 'USER_EXEC=$USER_EXEC_p4'
++ USER_EXEC=sudouser1
+ local RUN_SUDO=
+ eval 'RUN_SUDO=$RUN_SUDO_p4'
++ RUN_SUDO=sudotarget
+ local RUN_EXEC=
+ eval 'RUN_EXEC=$RUN_EXEC_p4'
++ RUN_EXEC=sudotarget
+ local CMD_SUDO=
+ eval 'CMD_SUDO=$CMD_SUDO_p4'
++ CMD_SUDO='NOPASSWD: /usr/bin/id'
+ local CMD_EXEC=
+ eval 'CMD_EXEC=$CMD_EXEC_p4'
++ CMD_EXEC='/usr/bin/id -u'
+ local CMD_RES=
+ eval 'CMD_RES=$CMD_RES_p4'
++ CMD_RES=12347
+ local CMD_RET=
+ eval 'CMD_RET=$CMD_RET_p4'
++ CMD_RET=0
+ local USER_PASS=
+ eval 'USER_PASS=$USER_PASS_p4'
++ USER_PASS=wrongpass
+ '[' -z wrongpass ']'
+ setup_sudoers sudouser1 sudotarget NOPASSWD: /usr/bin/id
+ local User_Alias=sudouser1
+ local Runas_Alias=sudotarget
+ shift
+ shift
+ local 'Cmd_Alias=NOPASSWD: /usr/bin/id'
+ local perm=
++ stat -c %a /etc/sudoers
+ perm=440
+ perl -ne 'print unless /#SUDO_TESTING_START/../#SUDO_TESTING_END/'
+ sed -e 's/^Defaults    requiretty/# Defaults    requiretty/'
+ '[' -n sudouser1 ']'
+ echo '#SUDO_TESTING_START'
+ echo 'User_Alias USER = sudouser1'
+ echo 'Runas_Alias RUNAS = sudotarget'
+ echo 'Defaults:USER timestamp_timeout=0'
+ echo 'USER  ALL = (RUNAS) NOPASSWD: /usr/bin/id'
+ echo '#SUDO_TESTING_END'
+ mv -f /etc/sudoers.new /etc/sudoers
+ chmod 440 /etc/sudoers
++ su -c 'echo wrongpass | sudo -S -u sudotarget /usr/bin/id -u 2>/dev/null' sudouser1
+ res=12347
+ ret=0
+ let testno=11+1
+ '[' 12347 = 12347 -a 0 -eq 0 ']'
+ echo 'Test p4 PASSED'
Test p4 PASSED
+ let testpass=11+1
+ echo 'Number of tests executed: 12'
Number of tests executed: 12
+ echo 'Number of tests failed:   0'
Number of tests failed:   0
+ echo 'Number of tests passed:   12'
Number of tests passed:   12
+ return 0
+ '[' 0 -gt 0 ']'
+ exit_pass
+ [[ -n '' ]]
+ exit 0
+ test_cleanup
+ mv -f /etc/sudoers.wJ3Cup /etc/sudoers
+ killall -9 -u sudouser1
+ userdel -rf sudouser1
+ killall -9 -u sudouser2
+ userdel -rf sudouser2
+ killall -9 -u sudotarget
+ userdel -rf sudotarget
+ groupdel sudogroup
+ rm -f /etc/sudoers.new
+ rm -f /tmp/tmp.pMVoRw9I49 /tmp/tmp.DkC40W3iVz /usr/local/eal4_testing/audit-test/tmp.TDVWTFjGOH
+ exit
--- end output -------------------------------------------------------------


Testcase                                                                                                                 Result
--------                                                                                                                 ------
[5] ssh04                                                                                                                 PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
Redirecting to /bin/systemctl restart sshd.service
Redirecting to /bin/systemctl restart sshd.service
spawn ssh root@localhost
root@localhost's password: 
Last failed login: Thu Jun 24 13:12:19 CEST 2021 from localhost on ssh:notty
There was 1 failed login attempt since the last successful login.
Last login: Thu Jun 24 13:12:15 2021 from localhost

  node status: [32mOK[0m
  See `nodectl check` for more information

Admin Console: https://10.1.42.190:9090/

]0;root@rhv:~[?1034h[root@rhv ~]# 
--- end output -------------------------------------------------------------


Testcase                                                                                                                 Result
--------                                                                                                                 ------
[6] ssh04_fail                                                                                                            PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
Redirecting to /bin/systemctl restart sshd.service
Redirecting to /bin/systemctl restart sshd.service
spawn ssh root@localhost
root@localhost's password: 
Permission denied, please try again.
root@localhost's password: 
--- end output -------------------------------------------------------------


Testcase                                                                                                                 Result
--------                                                                                                                 ------
[7] pam_pwquality_fail                                                                                                    PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
userdel: user 'testuser1' does not exist
groupdel: group 'testuser1' does not exist
spawn passwd testuser1
Changing password for user testuser1.
New password: 
Retype new password: 
passwd: all authentication tokens updated successfully.
Test minlen
spawn su testuser1
nodectl must be run as root!
nodectl must be run as root!
]0;testuser1@rhv:/usr/local/eal4_testing/audit-test/libpam/tests[?1034h[testuser1@rhv tests]$ passwd
Changing password for user testuser1.
Changing password for testuser1.
(current) UNIX password: 
New password: 
BAD PASSWORD: The password contains less than 1 digits
New password: 
BAD PASSWORD: The password contains less than 1 digits
New password: 
BAD PASSWORD: The password contains less than 1 digits
passwd: Have exhausted maximum number of retries for service
]0;testuser1@rhv:/usr/local/eal4_testing/audit-test/libpam/tests[testuser1@rhv tests]$ Login mapping for testuser1 is not defined, OK if default mapping was used
groupdel: group 'testuser1' does not exist
--- end output -------------------------------------------------------------


Testcase                                                                                                                 Result
--------                                                                                                                 ------
[8] pamfaillock_lock                                                                                                      PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ source tp_ssh_functions.bash
++ source functions.bash
+++ [[ -z 1 ]]
+++ return 0
++ BFOLDER=/tmp
++ RND=11280
++ TIMEOUT=600
+ /sbin/faillock --user testuser --reset
++ id -u testuser
+ tuid=1004
+ grep -q pam_faillock /etc/pam.d/sshd
+ grep -q pam_faillock /etc/pam.d/password-auth
+ disable_ssh_strong_rng
+ MPROFILE=/etc/profile
+ SSHDCONF=/etc/sysconfig/sshd
+ CCCONF=/etc/profile.d/cc-configuration.sh
+ '[' -e /etc/profile ']'
+ backup /etc/profile
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/profile.XXXXXX
+ b=/etc/profile.R4ha4G
+ cp -a /etc/profile /etc/profile.R4ha4G
+ prepend_cleanup 'mv -f '\''/etc/profile.R4ha4G'\'' '\''/etc/profile'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/profile.R4ha4G'\'' '\''/etc/profile'\''
	    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/sysconfig/sshd ']'
+ backup /etc/sysconfig/sshd
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/sysconfig/sshd.XXXXXX
+ b=/etc/sysconfig/sshd.NH1bpi
+ cp -a /etc/sysconfig/sshd /etc/sysconfig/sshd.NH1bpi
+ prepend_cleanup 'mv -f '\''/etc/sysconfig/sshd.NH1bpi'\'' '\''/etc/sysconfig/sshd'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/sysconfig/sshd.NH1bpi'\'' '\''/etc/sysconfig/sshd'\''
	    mv -f '\''/etc/profile.R4ha4G'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/profile.d/cc-configuration.sh ']'
+ ssh_remove_screen /etc/profile
+ '[' x/etc/profile = x ']'
+ '[' -f /etc/profile ']'
+ sed -i 's/.*sleep [0-9]\+.*//g; s/.*exec.*SCREENEXEC.*//g' /etc/profile
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ ssh_remove_strong_rng_env
+ export -n SSH_USE_STRONG_RNG
+ prepend_cleanup 'export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG
	    mv -f '\''/etc/sysconfig/sshd.NH1bpi'\'' '\''/etc/sysconfig/sshd'\'';
    mv -f '\''/etc/profile.R4ha4G'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ ssh_remove_strong_rng /etc/sysconfig/sshd
+ '[' x/etc/sysconfig/sshd = x ']'
+ '[' -f /etc/sysconfig/sshd ']'
+ sed -i 's/.*SSH_USE_STRONG_RNG.*//g' /etc/sysconfig/sshd
+ ssh_remove_strong_rng /etc/profile.d/cc-configuration.sh
+ '[' x/etc/profile.d/cc-configuration.sh = x ']'
+ '[' -f /etc/profile.d/cc-configuration.sh ']'
+ return
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ expect -c '
    spawn ssh $env(TEST_USER)@localhost
    expect {
        {continue} { send "yes\r"; exp_continue }
    {assword} { send "badpassword\r" }
    }
    expect {
        {denied} { exp_continue }
        {assword} { send "badpassword\r" }
    }
    expect {
        {denied} { exp_continue }
        {assword} { send "badpassword\r" }
    }
    expect -nocase {denied} { close; wait }'
spawn ssh testuser@localhost
testuser@localhost's password: 
Permission denied, please try again.
testuser@localhost's password: 
Permission denied, please try again.
testuser@localhost's password: 
Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).
+ msg_1='pam_faillock uid=1004.*exe=./usr/sbin/sshd.*res=success.*'
+ augrok -q type=ANOM_LOGIN_FAILURES 'msg_1=~pam_faillock uid=1004.*exe=./usr/sbin/sshd.*res=success.*'
+ augrok -q type=RESP_ACCT_LOCK 'msg_1=~pam_faillock uid=1004.*exe=./usr/sbin/sshd.*res=success.*'
+ /sbin/faillock --user testuser --reset
+ exit_pass
+ [[ -n '' ]]
+ exit 0
+ test_cleanup
+ export SSH_USE_STRONG_RNG=12
+ SSH_USE_STRONG_RNG=12
+ readonly SSH_USE_STRONG_RNG
+ mv -f /etc/sysconfig/sshd.NH1bpi /etc/sysconfig/sshd
+ mv -f /etc/profile.R4ha4G /etc/profile
+ rm -f /tmp/tmp.najbxJxZnr /tmp/tmp.ePjHUhnolA /usr/local/eal4_testing/audit-test/tmp.xa6ZMhJ2IU
+ exit
--- end output -------------------------------------------------------------


Testcase                                                                                                                 Result
--------                                                                                                                 ------
[9] pamfaillock_unlock                                                                                                    PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ source tp_ssh_functions.bash
++ source functions.bash
+++ [[ -z 1 ]]
+++ return 0
++ BFOLDER=/tmp
++ RND=32640
++ TIMEOUT=600
++ id -u testuser
+ tuid=1004
+ grep -q pam_faillock /etc/pam.d/sshd
+ grep -q pam_faillock /etc/pam.d/password-auth
+ disable_ssh_strong_rng
+ MPROFILE=/etc/profile
+ SSHDCONF=/etc/sysconfig/sshd
+ CCCONF=/etc/profile.d/cc-configuration.sh
+ '[' -e /etc/profile ']'
+ backup /etc/profile
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/profile.XXXXXX
+ b=/etc/profile.20yvSJ
+ cp -a /etc/profile /etc/profile.20yvSJ
+ prepend_cleanup 'mv -f '\''/etc/profile.20yvSJ'\'' '\''/etc/profile'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/profile.20yvSJ'\'' '\''/etc/profile'\''
	    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/sysconfig/sshd ']'
+ backup /etc/sysconfig/sshd
+ declare f b
+ for f in '"$@"'
++ mktemp /etc/sysconfig/sshd.XXXXXX
+ b=/etc/sysconfig/sshd.OWAkok
+ cp -a /etc/sysconfig/sshd /etc/sysconfig/sshd.OWAkok
+ prepend_cleanup 'mv -f '\''/etc/sysconfig/sshd.OWAkok'\'' '\''/etc/sysconfig/sshd'\'''
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	mv -f '\''/etc/sysconfig/sshd.OWAkok'\'' '\''/etc/sysconfig/sshd'\''
	    mv -f '\''/etc/profile.20yvSJ'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ '[' -e /etc/profile.d/cc-configuration.sh ']'
+ ssh_remove_screen /etc/profile
+ '[' x/etc/profile = x ']'
+ '[' -f /etc/profile ']'
+ sed -i 's/.*sleep [0-9]\+.*//g; s/.*exec.*SCREENEXEC.*//g' /etc/profile
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ ssh_remove_strong_rng_env
+ export -n SSH_USE_STRONG_RNG
+ prepend_cleanup 'export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG'
++ type test_cleanup
++ sed '1,3d;$d'
+ eval 'function test_cleanup {
	export SSH_USE_STRONG_RNG=12; readonly SSH_USE_STRONG_RNG
	    mv -f '\''/etc/sysconfig/sshd.OWAkok'\'' '\''/etc/sysconfig/sshd'\'';
    mv -f '\''/etc/profile.20yvSJ'\'' '\''/etc/profile'\'';
    rm -f "$tmp1" "$tmp2" "$localtmp"
    }'
+ ssh_remove_strong_rng /etc/sysconfig/sshd
+ '[' x/etc/sysconfig/sshd = x ']'
+ '[' -f /etc/sysconfig/sshd ']'
+ sed -i 's/.*SSH_USE_STRONG_RNG.*//g' /etc/sysconfig/sshd
+ ssh_remove_strong_rng /etc/profile.d/cc-configuration.sh
+ '[' x/etc/profile.d/cc-configuration.sh = x ']'
+ '[' -f /etc/profile.d/cc-configuration.sh ']'
+ return
+ ssh_restart_daemon
+ '[' capp = lspp ']'
+ service sshd restart
Redirecting to /bin/systemctl restart sshd.service
+ expect -c '
    spawn ssh $env(TEST_USER)@localhost
    expect {
        {continue} { send "yes\r"; exp_continue }
	{assword} { send "badpassword\r" }
    }
    expect {
        {denied} { exp_continue }
        {assword} { send "badpassword\r" }
    }
    expect {
        {denied} { exp_continue }
        {assword} { send "badpassword\r" }
    }
    expect -nocase {denied} { close; wait }'
spawn ssh testuser@localhost
testuser@localhost's password: 
Permission denied, please try again.
testuser@localhost's password: 
Permission denied, please try again.
testuser@localhost's password: 
Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).
+ /sbin/faillock --user testuser --reset
+ augrok type=USER_MGMT 'msg_1=~.*faillock-reset.*id=1004.*exe=.*/sbin/faillock.*res=success.*'
+ augrok -q type=USER_MGMT 'msg_1=~.*faillock-reset.*id=1004.*exe=.*/sbin/faillock.*res=success.*'
+ expect -c '
    spawn ssh $env(TEST_USER)@localhost
    expect {
        {continue} { send "yes\r"; exp_continue }
        {assword} {
            send "$env(TEST_USER_PASSWD)\r"
            send "PS1=:\\::\r"
        }
    }
    expect {:::$} { close; wait }'
spawn ssh testuser@localhost
testuser@localhost's password: 
Last failed login: Thu Jun 24 13:15:55 CEST 2021 from localhost on ssh:notty
There were 8 failed login attempts since the last successful login.
Last login: Thu Jun 24 13:14:59 2021
nodectl must be run as root!
nodectl must be run as root!
]0;testuser@rhv:~[?1034h[testuser@rhv ~]$ + augrok -q type=CRED_ACQ
+ msg_2='acct="testuser" exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ augrok -q type=CRED_ACQ 'msg_1=~PAM:setcred.* acct="testuser" exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ augrok -q type=USER_ACCT 'msg_1=~PAM:accounting.* acct="testuser" exe=.*/usr/sbin/sshd.*terminal=ssh res=success.*'
+ exit_pass
+ [[ -n '' ]]
+ exit 0
+ test_cleanup
+ export SSH_USE_STRONG_RNG=12
+ SSH_USE_STRONG_RNG=12
+ readonly SSH_USE_STRONG_RNG
+ mv -f /etc/sysconfig/sshd.OWAkok /etc/sysconfig/sshd
+ mv -f /etc/profile.20yvSJ /etc/profile
+ rm -f /tmp/tmp.SVKSdYnbnl /tmp/tmp.iAaiVdiHCv /usr/local/eal4_testing/audit-test/tmp.NpamOR70J6
+ exit
--- end output -------------------------------------------------------------


Testcase                                                                                                      Result
--------                                                                                                      ------
[10] pam_pwquality_fail                                                                                        PASS 
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
--- end output -------------------------------------------------------------


Testcase                                                                                                      Result
--------                                                                                                      ------
[11] pamfaillock_lock                                                                                      ERROR (2)
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ source tp_ssh_functions.bash
++ source functions.bash
+++ [[ -z 1 ]]
+++ return 0
++ BFOLDER=/tmp
++ RND=17368
++ TIMEOUT=600
+ /sbin/faillock --user testuser --reset
++ id -u testuser
+ tuid=1004
+ grep -q pam_faillock /etc/pam.d/sshd
+ grep -q pam_faillock /etc/pam.d/password-auth
+ exit_error
+ declare status
+ [[ -n '' ]]
+ status=2
+ [[ -n '' ]]
+ exit 2
+ test_cleanup
+ rm -f /tmp/tmp.pO5mjHEI5G /tmp/tmp.K2F8LYXhFf /usr/local/eal4_testing/audit-test/tmp.0xOPrxwaa5
+ exit
--- end output -------------------------------------------------------------


Testcase                                                                                                      Result
--------                                                                                                      ------
[12] pamfaillock_unlock                                                                                    ERROR (2)
--- begin output -----------------------------------------------------------
rotate_audit_logs: Attempting to rotate using USR1
+ source tp_ssh_functions.bash
++ source functions.bash
+++ [[ -z 1 ]]
+++ return 0
++ BFOLDER=/tmp
++ RND=19710
++ TIMEOUT=600
++ id -u testuser
+ tuid=1004
+ grep -q pam_faillock /etc/pam.d/sshd
+ grep -q pam_faillock /etc/pam.d/password-auth
+ exit_error
+ declare status
+ [[ -n '' ]]
+ status=2
+ [[ -n '' ]]
+ exit 2
+ test_cleanup
+ rm -f /tmp/tmp.QLUxdBXcth /tmp/tmp.gykHJY0Jk6 /usr/local/eal4_testing/audit-test/tmp.R7UpVUZFLl
+ exit
--- end output -------------------------------------------------------------



  11 pass (84%)
   0 fail (0%)
   2 error (15%)
------------------
  13 total
Killing all processes for testuser
Removing user testuser
Removing group testuser
Killing all processes for testadmin
Removing user testadmin
Removing group testadmin
